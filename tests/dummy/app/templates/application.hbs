<h2>ember-let dummy app</h2>

<h3>Bind basic values</h3>
<ul class="basic">
  {{#let "abc" "123" as |first second|}}
    <li>{{first}}</li>
    <li>{{second}}</li>
  {{/let}}
</ul>

<h3>Bind a hash and a standalone value</h3>
<ul class="with-hash">
  {{#let (hash first="first" second="second") "third" as |hash standalone|}}
    <li>{{hash.first}}</li>
    <li>{{hash.second}}</li>
    <li>{{standalone}}</li>
  {{/let}}
</ul>

<h3>Bind an object returned from a helper</h3>
<div class="with-helper-object">
  {{#let (boolean) as |bool|}}
      <span id="bool-value">{{bool.value}}</span> - <button id="toggle-bool" onClick={{action bool.toggle}}>toggle</button>
  {{/let}}
</div>

<h3>Bind undefined, null, and []</h3>
<ul class="missing-values">
  {{#let falseyValues.undef falseyValues.nullThing falseyValues.empty as |undef nullThing empty|}}
    <li>{{is-undefined undef}}</li>
    <li>{{is-null nullThing}}</li>
    <li>{{is-empty-array empty}}</li>
  {{/let}}
</ul>

<h3>Inline use</h3>
{{let greeting=(concat "hello " to)}}
<div class="inline-use">{{greeting}}</div>
<button {{action (action (mut to) "world")}}>Greet the world!</button>  

<h3>Inline `let` respects scoping rules</h3>
<div class="inline-scoping">
  {{let num=0}}
  <ul>
    <li>num = {{num}}</li>
    {{#each (array 1 2 3) as |num|}}
      <li>num = {{num}}</li>
    {{/each}}
    <li>num = {{num}}</li>
  </ul>
</div>
